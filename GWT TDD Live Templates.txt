

Settings > Editor > Live Templates > Java
--------------------------------------------------------------------------
//given

@DisplayName("Given $displayName$")
@Nested
class Given$methodName$ {
    
    
}

VARS
- displayName / <leave blank> / <leave blank> / unchecked
- methodName / capitalize(camelCase(displayName)) / <leave blank> / unchecked

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
//healthCheck

@Test

public void testHealthCheck() {
    Assert.assertTrue(true);
    XXXXXXXX actualObject = new XXXXXXXX();
    Assert.assertNotNull(actualObject);
}

@Test
public void providedTest() {
    XXXXXXXX yyyyyyy = new XXXXXXXX();
    assertEquals( AAAAA, BBBBB); 
}

VARS
- No variables

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
then

@DisplayName("Then $displayName$") 
@Test
public void then$methodName$() { 
    
    
}

VARS
- displayName / <leave blank>/ <leave blank> / unchecked
- methodName / capitalize(camelCase(displayName)) /<leave blank> / unchecked

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
when

@DisplayName("When $displayName$")
@Nested
class When$methodName$ {


}

VARS
- displayName / <leave blank> / <leave blank> / unchecked
- methodName / capitalize(camelCase(displayName)) / <leave blank> / unchecked

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
// with

public $T$ with$property$($propertyType$ $propertyName$){
    this.set$property$($propertyName$);
    return this;
}

VARS
- T / className() / <leave blank> / checked
- property / <leave blank> / <leave blank> / unchecked
- propertyType / typeOfVariable(decapitalize(property)) / <leave blank> / checked
- propertyName / decapitalize(property) / <leave blank> / checked

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
//init

@BeforeEach
public void init() {
    MockitoAnnotations.initMocks(this);
}

VARS
- No variables

- Make sure you select "Applicable in .." and have all Java contexts

--------------------------------------------------------------------------
